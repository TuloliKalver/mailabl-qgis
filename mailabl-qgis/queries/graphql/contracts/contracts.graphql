
query contracts($first: Int, $after: String, 
                $propertiesFirst: Int, $propertiesAfter: String,
                    $search: String, 
                    $where: QueryContractsWhereWhereConditions
                    ) {
    contracts(
        first: $first
        after: $after
        search: $search
        where: $where
            ) {
        pageInfo {
            count
            currentPage
            startCursor
            endCursor
            hasNextPage
            hasPreviousPage
            lastPage
            total
        }
        edges{
            node{
                id,
                number,
                name,
                dueAt,
                isSubcontract,
                filesPath
                status{
                    name, 
                    color
                    }
                createdAt,
                updatedAt,
                deletedAt
                responsible {
                    edges {
                        node {
                            id
                            displayName
                                        }
                                    }
                }    
                properties(
                    first: $propertiesFirst 
                    after: $propertiesAfter
                            ) {
                            pageInfo {
                                count
                                currentPage
                                startCursor
                                endCursor
                                hasNextPage
                                hasPreviousPage
                                lastPage
                                total
                            }
                            edges {
                                node {
                                    id,
                                    cadastralUnitNumber
                                    }
                                }
                            }
                        }
                    }
                }
            }
